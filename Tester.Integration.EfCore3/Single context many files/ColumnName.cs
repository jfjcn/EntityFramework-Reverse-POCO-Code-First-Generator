// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.co.uk/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Registered to: Simon Hughes
// Company      : Reverse POCO
// Licence Type : Commercial
// Licences     : 1
// Valid until  : 03 NOV 2020
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Connection String Name: "EfCoreDatabase"
//     Connection String:      "Data Source=(local);Initial Catalog=EfrpgTest;Integrated Security=True"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Developer Edition (64-bit)
// Database Engine Edition: Enterprise
// Database Version       : 14.0.2027.2

// <auto-generated>
// ReSharper disable CheckNamespace
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable NotAccessedVariable
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantCast
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// ReSharper disable UsePatternMatching
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Tester.Integration.EfCore3.Single_context_many_files
{
    // ColumnNames
    /// <summary>
    /// This is to document the
    /// table with poor column name choices
    /// </summary>
    public class ColumnName
    {
        public int C36 { get; set; } // $ (Primary key)
        public int? C37 { get; set; } // %
        public int? C163 { get; set; } // Â£

        /// <summary>
        /// Multi
            ///        Line
            ///    Comment
        /// </summary>
        public int? C38Test36 { get; set; } // &test$
        public int? Abc4792 { get; set; } // abc/\
        public int? Joe46Bloggs { get; set; } // joe.bloggs
        public int? SnakeCase { get; set; } // snake-case
        public string DefaultTest { get; set; } // default_test (length: 20)
        public DateTime SomeDate { get; set; } // someDate
        public string Obs { get; set; } // Obs (length: 20)
        public string Slash1 { get; set; } // Slash1 (length: 20)
        public string Slash2 { get; set; } // Slash2 (length: 20)
        public string Slash3 { get; set; } // Slash3 (length: 20)
        public int? @Static { get; set; } // static
        public int? @Readonly { get; set; } // readonly
        public int? C123Hi { get; set; } // 123Hi
        public float? Afloat { get; set; } // afloat
        public double? Adouble { get; set; } // adouble
        public decimal? Adecimal { get; set; } // adecimal

        public ColumnName()
        {
            DefaultTest = "";
            SomeDate = DateTime.Now;
            Obs = "[{\"k\":\"en\",\"v\":\"\"},{\"k\":\"pt\",\"v\":\"\"}]";
            Slash1 = @"\";
            Slash2 = @"\\";
            Slash3 = @"\\\";
            Afloat = 1.23f;
            Adouble = 999.0;
        }
    }

}
// </auto-generated>

