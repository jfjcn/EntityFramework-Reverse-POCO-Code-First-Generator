// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.co.uk/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Registered to: Simon Hughes
// Company      : Reverse POCO
// Licence Type : Commercial
// Licences     : 1
// Valid until  : 03 NOV 2020
//
// Do not make changes directly to this file - edit the template instead.
//
// The following connection settings were used to generate this file:
//     Connection String Name: "EfCoreDatabase"
//     Connection String:      "Data Source=(local);Initial Catalog=EfrpgTest;Integrated Security=True"
// ------------------------------------------------------------------------------------------------
// Database Edition       : Developer Edition (64-bit)
// Database Engine Edition: Enterprise
// Database Version       : 14.0.2027.2

// <auto-generated>
// ReSharper disable CheckNamespace
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable NotAccessedVariable
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantCast
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// ReSharper disable UsePatternMatching
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace Tester.Integration.EfCore3.Single_context_many_files
{
    // UserInfoAttributes
    public class UserInfoAttributeConfiguration : IEntityTypeConfiguration<UserInfoAttribute>
    {
        public void Configure(EntityTypeBuilder<UserInfoAttribute> builder)
        {
            builder.ToTable("UserInfoAttributes", "dbo");
            builder.HasKey(x => x.Id).HasName("PK_UserInfoAttributes").IsClustered();

            builder.Property(x => x.Id).HasColumnName(@"Id").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.PrimaryId).HasColumnName(@"PrimaryId").HasColumnType("int").IsRequired();
            builder.Property(x => x.SecondaryId).HasColumnName(@"SecondaryId").HasColumnType("int").IsRequired();

            // Foreign keys
            builder.HasOne(a => a.Primary).WithMany(b => b.UserInfoAttributes_PrimaryId).HasForeignKey(c => c.PrimaryId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_UserInfoAttributes_PrimaryUserInfo");
            builder.HasOne(a => a.Secondary).WithMany(b => b.UserInfoAttributes_SecondaryId).HasForeignKey(c => c.SecondaryId).OnDelete(DeleteBehavior.ClientSetNull).HasConstraintName("FK_UserInfoAttributes_SecondaryUserInfo");
        }
    }

}
// </auto-generated>

